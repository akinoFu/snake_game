import json
import os
import datetime

from .score import Score

class ScoreManager:
    def __init__(self, filename="api/scores.json"):
        self._scores = list()
        self._filename = filename

        if not os.path.exists(filename):
            # If the file does not exist, stop here
            return None

        # Load scores from the file
        with open(filename, "r") as fp:
            json_data = json.load(fp)
            for obj in json_data:
                score = Score.from_json(obj)
                self._scores.append(score)
    
    @property
    def scores(self):
        return self._scores

    def add_score(self, name, score):
        """ creates a score instance and adds it to the list of scores
            - this method will find an available ID in the list of managed scores, and use it for the new instance
            - the date/time will be automatically generated by the Score class
        """
        new_id = 1
        for score_ins in self._scores:
            if new_id <= score_ins._identifier:
                new_id = score_ins._identifier + 1
        
        new_score_ins = Score(new_id, name, score)
        self._scores.append(new_score_ins)
        return True
    
    def save(self):
        """ Serializes the list of scores and saves to a JSON file """
        with open(self._filename, "w") as fp:
            json.dump([score.to_json() for score in self._scores], fp)
